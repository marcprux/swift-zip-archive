name: CI

on:
  push:
    branches:
      - main
    paths:
      - "**.swift"
      - "**.yml"
  pull_request:
  workflow_dispatch:

jobs:
  macos:
    runs-on: macOS-15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: SPM tests
        run: swift test --enable-code-coverage
      - name: Convert coverage files
        run: |
          xcrun llvm-cov export -format "lcov" \
            .build/debug/swift-zip-archivePackageTests.xctest/Contents/MacOs/swift-zip-archivePackageTests \
            -ignore-filename-regex="\/Tests\/" \
            -instr-profile=.build/debug/codecov/default.profdata > info.lcov
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v4
        with:
          file: info.lcov
          token: ${{ secrets.CODECOV_TOKEN }}

  linux:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        image: ["swift:6.0", "swift:6.1"]

    container:
      image: ${{ matrix.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test
        run: |
          swift test --enable-code-coverage
      - name: Convert coverage files
        run: |
          llvm-cov export -format="lcov" \
            .build/debug/swift-zip-archivePackageTests.xctest \
            -ignore-filename-regex="\/Tests\/" \
            -instr-profile .build/debug/codecov/default.profdata > info.lcov
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v4
        with:
          files: info.lcov
          token: ${{ secrets.CODECOV_TOKEN }}

  android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test
        uses: skiptools/swift-android-action@v2
        with:
          copy-files: Sources Tests

  windows:
    runs-on: windows-latest
    steps:
      - uses: compnerd/gha-setup-swift@main
        with:
          branch: swift-6.1-release
          tag: 6.1-RELEASE
      - name: Download zlib
        run: |
          curl -L -o zlib.zip https://www.zlib.net/zlib131.zip
          mkdir zlib-131
          tar -xf zlib.zip -C zlib-131 --strip-components=1
      - name: Build and install zlib
        run: |
          cd zlib-131
          mkdir build
          cd build
          cmake ..
          cmake --build . --config Release
          cmake --install . --prefix ../install
      - name: Checkout
        uses: actions/checkout@v4
      - name: Swift version
        run: |
          swift --version
      - name: Test
        run: |
          swift test -Xcc -I'C:/Program Files (x86)/zlib/include' -Xlinker -L'C:/Program Files (x86)/zlib/lib'
